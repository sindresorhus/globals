import fs from 'node:fs';
import globals from '../index.js';

const getGroupTypeName = group => `Globals${group[0].toUpperCase() + group.slice(1).replaceAll('-', '')}`;

const groups = {};
const output = [
	'// This file is autogenerated by scripts/generate-types.mjs',
	'// Do NOT modify this file manually\n',
];

for (const group of Object.keys(globals)) {
	const groupType = getGroupTypeName(group);
	groups[group] = groupType;

	output.push(`type ${getGroupTypeName(group)} = {`);

	for (const [rule, status] of Object.entries(globals[group])) {
		output.push(`	readonly '${rule}': ${status};`);
	}

	output.push('}\n');
}

output.push('type Globals = {');

for (const [group, groupType] of Object.entries(groups)) {
	output.push(`	readonly '${group}': ${groupType};`);
}

output.push('}\n', 'declare const globals: Globals;\n', 'export = globals;');

fs.writeFileSync(
	new URL('../index.d.ts', import.meta.url),
	output.join('\n'),
);
